{
  "openapi": "3.0.0",
  "info": {
    "title": "API",
    "version": "1.0.0",
    "description": "API for handling backend."
  },
  "paths": {
    "/get_bot_conversation_history_table": {
      "post": {
        "tags": [
          "Bot Conversation"
        ],
        "summary": "Get Bot Conversation History Table",
        "description": "Handles requests to get bot conversation history table, validates request hash, and forwards to the actual backend endpoint.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "row_length": {
                        "type": "number",
                        "description": "The number of rows to be returned."
                      },
                      "page": {
                        "type": "number",
                        "description": "The current page number for pagination."
                      },
                      "sort_column": {
                        "type": "number",
                        "description": "The column index to sort by.",
                        "example": 0
                      },
                      "direction": {
                        "type": "string",
                        "description": "The sorting direction, e.g., 'asc' or 'desc'.",
                        "example": "desc"
                      },
                      "bot_id": {
                        "type": "string",
                        "description": "The ID of the bot."
                      }
                    },
                    "required": [
                      "row_length",
                      "page",
                      "sort_column",
                      "direction",
                      "bot_id"
                    ]
                  },
                  "from_date": {
                    "type": "number",
                    "description": "The start date for filtering results."
                  },
                  "to_date": {
                    "type": "number",
                    "description": "The end date for filtering results."
                  },
                  "search_filter": {
                    "type": "string",
                    "description": "The topic to filter the results by."
                  },
                  "date_mode": {
                    "type": "number",
                    "description": "The date mode for filtering."
                  }
                },
                "required": [
                  "data",
                  "from_date",
                  "to_date",
                  "date_mode"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response with data from the bot conversation history table.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success message."
                    },
                    "data": {
                      "type": "object",
                      "description": "Data returned from the bot conversation history table."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Hash not valid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message indicating hash validation failed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message indicating a server issue or failure to communicate with the backend."
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "ecwx-session-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Session ID used for tracking the session."
          },
          {
            "name": "ecwx-hash",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "HMAC-SHA256 hash of the request body using the session secret."
          }
        ]
      }
    },
    "/get_bot_executive_summary": {
      "post": {
        "tags": [
          "Bot Conversation"
        ],
        "summary": "Get Bot Executive Summary",
        "description": "Handles requests to get the bot executive summary, validates request hash, and forwards to the actual backend endpoint.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "bot_id": {
                        "type": "string",
                        "description": "The ID of the bot."
                      }
                    },
                    "required": [
                      "bot_id"
                    ]
                  },
                  "from_date": {
                    "type": "number",
                    "description": "The start date for filtering results."
                  },
                  "to_date": {
                    "type": "number",
                    "description": "The end date for filtering results."
                  },
                  "date_mode": {
                    "type": "number",
                    "description": "The date mode for filtering."
                  }
                },
                "required": [
                  "data",
                  "from_date",
                  "to_date",
                  "date_mode"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response with data from the bot executive summary.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success message."
                    },
                    "data": {
                      "type": "object",
                      "description": "Data returned from the bot executive summary."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Hash not valid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message indicating hash validation failed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message indicating a server issue or failure to communicate with the backend."
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "ecwx-session-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Session ID used for tracking the session."
          },
          {
            "name": "ecwx-hash",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "HMAC-SHA256 hash of the request body using the session secret."
          }
        ]
      }
    },
    "/get_bot_conversation_topic_chart": {
      "post": {
        "tags": [
          "Bot Conversation"
        ],
        "summary": "Get Bot Conversation Topic Chart",
        "description": "Handles requests to get the bot conversation topic chart, validates request hash, and forwards to the actual backend endpoint.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "bot_id": {
                        "type": "string",
                        "description": "The ID of the bot."
                      }
                    },
                    "required": [
                      "bot_id"
                    ]
                  },
                  "from_date": {
                    "type": "number",
                    "description": "The start date for filtering results."
                  },
                  "to_date": {
                    "type": "number",
                    "description": "The end date for filtering results."
                  },
                  "search_filter": {
                    "type": "string",
                    "description": "The topic to filter the results by."
                  },
                  "date_mode": {
                    "type": "number",
                    "description": "The date mode for filtering."
                  }
                },
                "required": [
                  "data",
                  "from_date",
                  "to_date",
                  "date_mode"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response with data from the bot conversation topic chart.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success message."
                    },
                    "data": {
                      "type": "object",
                      "description": "Data returned from the bot conversation topic chart."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Hash not valid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message indicating hash validation failed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message indicating a server issue or failure to communicate with the backend."
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "ecwx-session-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Session ID used for tracking the session."
          },
          {
            "name": "ecwx-hash",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "HMAC-SHA256 hash of the request body using the session secret."
          }
        ]
      }
    },
    "/get_bot_conversation": {
      "post": {
        "tags": [
          "Bot Conversation"
        ],
        "summary": "Get Bot Conversation",
        "description": "Handles requests to get the bot conversation.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "job_id": {
                    "type": "string",
                    "description": "The date mode for filtering."
                  }
                },
                "required": [
                  "job_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response with data from the bot conversation topic chart.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success message."
                    },
                    "data": {
                      "type": "object",
                      "description": "Data returned from the bot conversation topic chart."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Hash not valid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message indicating hash validation failed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message indicating a server issue or failure to communicate with the backend."
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "ecwx-session-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Session ID used for tracking the session."
          },
          {
            "name": "ecwx-hash",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "HMAC-SHA256 hash of the request body using the session secret."
          }
        ]
      }
    },
    "/get_bot_internal_knowledge": {
      "post": {
        "tags": [
          "Bot Knowledge"
        ],
        "summary": "Get Bot Internal Knowledge",
        "description": "Handles requests to get bot internal knowledge, validates request hash, and forwards to the actual backend endpoint.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bot_id": {
                    "type": "string",
                    "description": "The ID of the bot."
                  }
                },
                "required": [
                  "bot_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response with data from the bot internal knowledge.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success message."
                    },
                    "data": {
                      "type": "object",
                      "description": "Data returned from the bot internal knowledge."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Hash not valid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error_message": {
                      "type": "string",
                      "description": "Error message indicating hash validation failed."
                    },
                    "error_code": {
                      "type": "string",
                      "description": "Error code for unauthorized access."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Bot ID does not match the organization.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error_code": {
                      "type": "string",
                      "description": "Error code indicating access is forbidden."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error_code": {
                      "type": "string",
                      "description": "Error message indicating a server issue or failure to communicate with the backend."
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "ecwx-session-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Session ID used for tracking the session."
          },
          {
            "name": "ecwx-hash",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "HMAC-SHA256 hash of the request body using the session secret."
          }
        ]
      }
    },
    "/update_bot_internal_knowledge": {
      "post": {
        "tags": [
          "Bot Knowledge"
        ],
        "summary": "Update Bot Internal Knowledge",
        "description": "Handles requests to update bot internal knowledge, validates request hash, and forwards to the actual backend endpoint.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bot_id": {
                    "type": "string",
                    "description": "The ID of the bot."
                  },
                  "child_prompt_id": {
                    "type": "string",
                    "description": "The ID of the child prompt to be updated. Can be empty if not applicable."
                  },
                  "knowledge_text": {
                    "type": "string",
                    "description": "The knowledge text that needs to be updated."
                  }
                },
                "required": [
                  "bot_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response with confirmation of update.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success message indicating the knowledge was updated."
                    },
                    "data": {
                      "type": "object",
                      "description": "Data returned from the update action."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Hash not valid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error_message": {
                      "type": "string",
                      "description": "Error message indicating hash validation failed."
                    },
                    "error_code": {
                      "type": "string",
                      "description": "Error code for unauthorized access."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Bot ID does not match the organization.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error_code": {
                      "type": "string",
                      "description": "Error code indicating access is forbidden."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error_code": {
                      "type": "string",
                      "description": "Error message indicating a server issue or failure to communicate with the backend."
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "ecwx-session-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Session ID used for tracking the session."
          },
          {
            "name": "ecwx-hash",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "HMAC-SHA256 hash of the request body using the session secret."
          }
        ]
      }
    },
    "/get_bot_internal_greeting": {
      "post": {
        "tags": [
          "Bot Knowledge"
        ],
        "summary": "Get Bot Internal Greeting",
        "description": "Handles requests to get bot internal greeting, validates the request hash, checks the bot organization, and forwards the request to the actual backend endpoint.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bot_id": {
                    "type": "string",
                    "description": "The ID of the bot."
                  }
                },
                "required": [
                  "bot_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response with data from the bot internal greeting.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success message."
                    },
                    "data": {
                      "type": "object",
                      "description": "Data returned from the bot internal greeting."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Hash not valid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error_message": {
                      "type": "string",
                      "description": "Error message indicating hash validation failed."
                    },
                    "error_code": {
                      "type": "string",
                      "description": "Error code for unauthorized access."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Bot ID does not match the organization.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error_code": {
                      "type": "string",
                      "description": "Error code indicating access is forbidden."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error_code": {
                      "type": "string",
                      "description": "Error message indicating a server issue or failure to communicate with the backend."
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "ecwx-session-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Session ID used for tracking the session."
          },
          {
            "name": "ecwx-hash",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "HMAC-SHA256 hash of the request body using the session secret."
          }
        ]
      }
    },
    "/update_bot_internal_greeting": {
      "post": {
        "tags": [
          "Bot Knowledge"
        ],
        "summary": "Update Bot Internal Greeting",
        "description": "Handles requests to update the bot internal greeting, validates the request hash, checks the bot organization, and forwards the request to the actual backend endpoint.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bot_id": {
                    "type": "string",
                    "description": "The ID of the bot."
                  },
                  "greeting": {
                    "type": "string",
                    "description": "The new greeting message to be set for the bot."
                  }
                },
                "required": [
                  "bot_id",
                  "greeting"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response indicating the greeting has been updated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success message."
                    },
                    "data": {
                      "type": "object",
                      "description": "Data confirming the greeting update."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Hash not valid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error_message": {
                      "type": "string",
                      "description": "Error message indicating hash validation failed."
                    },
                    "error_code": {
                      "type": "string",
                      "description": "Error code for unauthorized access."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Bot ID does not match the organization.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error_code": {
                      "type": "string",
                      "description": "Error code indicating access is forbidden."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error_code": {
                      "type": "string",
                      "description": "Error message indicating a server issue or failure to communicate with the backend."
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "ecwx-session-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Session ID used for tracking the session."
          },
          {
            "name": "ecwx-hash",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "HMAC-SHA256 hash of the request body using the session secret."
          }
        ]
      }
    }
  }
}
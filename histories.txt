export async function handleLoginRequest(
  req: Request,
  res: Response
): Promise<void> {
  try {
    const { username, half_nonce } = req.body;

    console.log(req.body);

    // Validation
    if (!username || !half_nonce) {
      res.status(400).json({ error: "Invalid input" });
      return;
    }

    const user = await prisma.user.findUnique({
      where: { username },
      select: { id: true, salt: true, salted_password: true },
    });

    if (!user) {
      res.status(404).json({ error: "User not found" });
      return;
    }

    // Generate nonce1
    const nonce1 = generateRandomString(8);
    const fullNonce = `${half_nonce}${nonce1}`;

    // Generate challenge_response
    const challengeResponse = crypto
      .createHmac("sha256", user.salted_password)
      .update(fullNonce)
      .digest("base64");

    // Save challenge_response to DB
    await prisma.challenge_response.create({
      data: {
        full_nonce: fullNonce,
        user_id: user.id,
        challenge_response: challengeResponse,
      },
    });

    // Send response to frontend
    res.json({
      full_nonce: fullNonce,
      challenge_response: challengeResponse,
    });
  } catch (e) {
    console.error("Error handling login request:", e, req.body);
    res.status(500).json({ message: "Internal server error", e, reqBody: req.body });
  }
}
